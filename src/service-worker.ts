import { precacheAndRoute } from 'workbox-precaching';
import { registerRoute } from 'workbox-routing';
import { NetworkFirst, CacheFirst } from 'workbox-strategies';
import { ExpirationPlugin } from 'workbox-expiration';

// Cast self to ServiceWorkerGlobalScope
const sw = self as unknown as ServiceWorkerGlobalScope;

// Precache files generated by Vite
precacheAndRoute(__WB_MANIFEST || []);

// Cache API responses with a network-first strategy
registerRoute(
  /^https:\/\/api\.yourdomain\.com\/.*$/,
  new NetworkFirst({
    cacheName: 'api-cache',
    networkTimeoutSeconds: 10,
  })
);

// Cache static assets (e.g., images) with a cache-first strategy
registerRoute(
  /\.(?:png|jpg|jpeg|svg|gif|webp)$/,
  new CacheFirst({
    cacheName: 'image-cache',
    plugins: [
      new ExpirationPlugin({
        maxEntries: 50,
        maxAgeSeconds: 7 * 24 * 60 * 60, // Cache for 1 week
      }),
    ],
  })
);

// Handle messages from the main thread
sw.addEventListener('message', (event) => {
  if (event.data && event.data.type === 'SKIP_WAITING') {
    sw.skipWaiting();
  }
});

// Claim clients immediately after activating the new service worker
sw.addEventListener('activate', (event) => {
  event.waitUntil(sw.clients.claim());
});